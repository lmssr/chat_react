{"ast":null,"code":"var _jsxFileName = \"/Users/lucmosser/code/lmssr/chat_react/src/Components/ChatApp.js\";\n// src/Components/ChatApp.js\nimport React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\n\nclass ChatApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      currentRoom: {\n        users: []\n      },\n      messages: [],\n      users: []\n    };\n    this.addMessage = this.addMessage.bind(this);\n  }\n\n  componentDidMount() {\n    const chatManager = new ChatManager({\n      instanceLocator: \"v1:us1:8179fd09-7910-406f-8f28-7c1a36385e5a\",\n      userId: this.props.currentId,\n      tokenProvider: new TokenProvider({\n        url: 'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/8179fd09-7910-406f-8f28-7c1a36385e5a/token'\n      })\n    });\n    chatManager.connect().then(currentUser => {\n      this.setState({\n        currentUser: currentUser\n      });\n      return currentUser.subscribeToRoom({\n        roomId: \"ce854338-d348-4849-8767-1656f232c036\",\n        messageLimit: 100,\n        hooks: {\n          onMessage: message => {\n            this.setState({\n              messages: [...this.state.messages, message]\n            });\n          }\n        }\n      });\n    }).then(currentRoom => {\n      this.setState({\n        currentRoom,\n        users: currentRoom.userIds\n      });\n    }).catch(error => console.log(error));\n  }\n\n  addMessage(text) {\n    this.state.currentUser.sendMessage({\n      text,\n      roomId: this.state.currentRoom.id\n    }).catch(error => console.error('error', error));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Hi There, Ask us anything\"), React.createElement(MessageList, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Input, {\n      className: \"input-field\",\n      onSubmit: this.addMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChatApp;","map":{"version":3,"sources":["/Users/lucmosser/code/lmssr/chat_react/src/Components/ChatApp.js"],"names":["React","Component","ChatManager","TokenProvider","MessageList","Input","ChatApp","constructor","props","state","currentUser","currentRoom","users","messages","addMessage","bind","componentDidMount","chatManager","instanceLocator","userId","currentId","tokenProvider","url","connect","then","setState","subscribeToRoom","roomId","messageLimit","hooks","onMessage","message","userIds","catch","error","console","log","text","sendMessage","id","render"],"mappings":";AAAI;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,wBAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC5BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,IADJ;AAETC,MAAAA,WAAW,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAFJ;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITD,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,WAAW,GAAG,IAAIf,WAAJ,CAAgB;AAChCgB,MAAAA,eAAe,EAAE,6CADe;AAEhCC,MAAAA,MAAM,EAAE,KAAKX,KAAL,CAAWY,SAFa;AAGhCC,MAAAA,aAAa,EAAE,IAAIlB,aAAJ,CAAkB;AAC7BmB,QAAAA,GAAG,EAAE;AADwB,OAAlB;AAHiB,KAAhB,CAApB;AAOAL,IAAAA,WAAW,CACNM,OADL,GAEKC,IAFL,CAEUd,WAAW,IAAI;AACjB,WAAKe,QAAL,CAAc;AAAEf,QAAAA,WAAW,EAAEA;AAAf,OAAd;AACA,aAAOA,WAAW,CAACgB,eAAZ,CAA4B;AAC/BC,QAAAA,MAAM,EAAE,sCADuB;AAE/BC,QAAAA,YAAY,EAAE,GAFiB;AAG/BC,QAAAA,KAAK,EAAE;AACHC,UAAAA,SAAS,EAAEC,OAAO,IAAI;AAClB,iBAAKN,QAAL,CAAc;AACVZ,cAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWI,QAAf,EAAyBkB,OAAzB;AADA,aAAd;AAGH;AALE;AAHwB,OAA5B,CAAP;AAWH,KAfL,EAgBKP,IAhBL,CAgBUb,WAAW,IAAI;AACjB,WAAKc,QAAL,CAAc;AACVd,QAAAA,WADU;AAEVC,QAAAA,KAAK,EAAED,WAAW,CAACqB;AAFT,OAAd;AAIH,KArBL,EAsBKC,KAtBL,CAsBWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAtBpB;AAuBC;;AAELpB,EAAAA,UAAU,CAACuB,IAAD,EAAO;AACb,SAAK5B,KAAL,CAAWC,WAAX,CAAuB4B,WAAvB,CAAmC;AAC/BD,MAAAA,IAD+B;AAE/BV,MAAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWE,WAAX,CAAuB4B;AAFA,KAAnC,EAICN,KAJD,CAIOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CAJhB;AAKH;;AACDM,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAK/B,KAAL,CAAWI,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,QAAQ,EAAE,KAAKC,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AA5D2B;;AA8DhC,eAAeR,OAAf","sourcesContent":["    // src/Components/ChatApp.js\n\n    import React, {Component} from 'react';\n    import { ChatManager, TokenProvider } from '@pusher/chatkit-client';\n    import MessageList from './MessageList';\n    import Input from './Input';\n\n    class ChatApp extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                currentUser: null,\n                currentRoom: {users:[]},\n                messages: [],\n                users: []\n            }\n            this.addMessage = this.addMessage.bind(this);\n        }\n\n        componentDidMount() {\n            const chatManager = new ChatManager({\n                instanceLocator: \"v1:us1:8179fd09-7910-406f-8f28-7c1a36385e5a\",\n                userId: this.props.currentId,\n                tokenProvider: new TokenProvider({\n                    url: 'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/8179fd09-7910-406f-8f28-7c1a36385e5a/token'\n                })\n            })\n            chatManager\n                .connect()\n                .then(currentUser => {\n                    this.setState({ currentUser: currentUser })\n                    return currentUser.subscribeToRoom({\n                        roomId: \"ce854338-d348-4849-8767-1656f232c036\",\n                        messageLimit: 100,\n                        hooks: {\n                            onMessage: message => {\n                                this.setState({\n                                    messages: [...this.state.messages, message],\n                                })\n                            },\n                        }\n                    })\n                })\n                .then(currentRoom => {\n                    this.setState({\n                        currentRoom,\n                        users: currentRoom.userIds\n                    })\n                })\n                .catch(error => console.log(error))\n            }\n\n        addMessage(text) {\n            this.state.currentUser.sendMessage({\n                text,\n                roomId: this.state.currentRoom.id\n            })\n            .catch(error => console.error('error', error));\n        }\n        render() {\n            return (\n                <div>\n                    <h2 className=\"header\">Hi There, Ask us anything</h2>\n                    <MessageList messages={this.state.messages} />\n                    <Input className=\"input-field\" onSubmit={this.addMessage} />\n                </div>\n            )\n        }\n    }\n    export default ChatApp;\n"]},"metadata":{},"sourceType":"module"}