{"ast":null,"code":"'use strict';\n\nconst _require = require('stream'),\n      PassThroughStream = _require.PassThrough;\n\nmodule.exports = options => {\n  options = { ...options\n  };\n  const _options = options,\n        array = _options.array;\n  let _options2 = options,\n      encoding = _options2.encoding;\n  const isBuffer = encoding === 'buffer';\n  let objectMode = false;\n\n  if (array) {\n    objectMode = !(encoding || isBuffer);\n  } else {\n    encoding = encoding || 'utf8';\n  }\n\n  if (isBuffer) {\n    encoding = null;\n  }\n\n  const stream = new PassThroughStream({\n    objectMode\n  });\n\n  if (encoding) {\n    stream.setEncoding(encoding);\n  }\n\n  let length = 0;\n  const chunks = [];\n  stream.on('data', chunk => {\n    chunks.push(chunk);\n\n    if (objectMode) {\n      length = chunks.length;\n    } else {\n      length += chunk.length;\n    }\n  });\n\n  stream.getBufferedValue = () => {\n    if (array) {\n      return chunks;\n    }\n\n    return isBuffer ? Buffer.concat(chunks, length) : chunks.join('');\n  };\n\n  stream.getBufferedLength = () => length;\n\n  return stream;\n};","map":null,"metadata":{},"sourceType":"script"}